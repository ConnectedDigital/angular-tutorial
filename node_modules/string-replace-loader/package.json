{
  "_args": [
    [
      {
        "raw": "string-replace-loader@github:gdi2290/string-replace-loader",
        "scope": null,
        "escapedName": "string-replace-loader",
        "name": "string-replace-loader",
        "rawSpec": "github:gdi2290/string-replace-loader",
        "spec": "github:gdi2290/string-replace-loader",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:gdi2290/string-replace-loader.git",
          "sshUrl": "git+ssh://git@github.com/gdi2290/string-replace-loader.git",
          "httpsUrl": "git+https://github.com/gdi2290/string-replace-loader.git",
          "gitUrl": "git://github.com/gdi2290/string-replace-loader.git",
          "shortcut": "github:gdi2290/string-replace-loader",
          "directUrl": "https://raw.githubusercontent.com/gdi2290/string-replace-loader/master/package.json"
        }
      },
      "E:\\Programowanie\\front-end\\projects\\contacts"
    ]
  ],
  "_from": "gdi2290/string-replace-loader",
  "_id": "string-replace-loader@1.0.2",
  "_inCache": true,
  "_installable": true,
  "_location": "/string-replace-loader",
  "_phantomChildren": {},
  "_requested": {
    "raw": "string-replace-loader@github:gdi2290/string-replace-loader",
    "scope": null,
    "escapedName": "string-replace-loader",
    "name": "string-replace-loader",
    "rawSpec": "github:gdi2290/string-replace-loader",
    "spec": "github:gdi2290/string-replace-loader",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:gdi2290/string-replace-loader.git",
      "sshUrl": "git+ssh://git@github.com/gdi2290/string-replace-loader.git",
      "httpsUrl": "git+https://github.com/gdi2290/string-replace-loader.git",
      "gitUrl": "git://github.com/gdi2290/string-replace-loader.git",
      "shortcut": "github:gdi2290/string-replace-loader",
      "directUrl": "https://raw.githubusercontent.com/gdi2290/string-replace-loader/master/package.json"
    }
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "git://github.com/gdi2290/string-replace-loader.git#f83ae33481e78651f156f633f2ef96dffacc2457",
  "_shasum": "81f3201259428526cc523e5769b425dbfe008b96",
  "_shrinkwrap": null,
  "_spec": "string-replace-loader@github:gdi2290/string-replace-loader",
  "_where": "E:\\Programowanie\\front-end\\projects\\contacts",
  "author": {
    "name": "Valentyn Barmashyn",
    "email": "valpreacher@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/Va1/string-replace-loader/issues"
  },
  "dependencies": {
    "loader-utils": "^0.2.11",
    "lodash": "^3.10.1"
  },
  "description": "Replace loader for Webpack",
  "devDependencies": {
    "chai": "^3.2.0",
    "mocha": "^2.3.2",
    "webpack": "^1.9.0"
  },
  "gitHead": "f83ae33481e78651f156f633f2ef96dffacc2457",
  "homepage": "https://github.com/Va1/string-replace-loader",
  "keywords": [
    "webpack",
    "loader",
    "webpack-loader",
    "replace",
    "string-replace",
    "regex-replace"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "string-replace-loader",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "*"
  },
  "private": false,
  "readme": "# Replace loader for [Webpack](http://webpack.github.io/)\r\n\r\nPerform replacements (plain and regular expression) in the contents loaded by the loader.\r\n\r\n## Install:\r\n\r\n```bash\r\n$ npm install --save-dev string-replace-loader\r\n```\r\n\r\n## Usage:\r\n\r\nIn general, loader allows to perform replacements in a way [String.prototype.replace()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace) does (loader uses it internally). For instance, it means that if you want to replace all occurences, you should use RegExp in `query.search` with `g` flag in `query.flags`, etc.\r\n\r\n### Plain replacement:\r\n\r\nIn your `webpack.config.js`:\r\n\r\n```javascript\r\nmodule.exports = {\r\n  // ...\r\n  module: {\r\n    loaders: [\r\n      {\r\n        test: /fileInWhichJQueryIsUndefined\\.js$/,\r\n        loader: 'string-replace',\r\n        query: {\r\n          search: 'jQuery',\r\n          replace: 'window.$'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n### RegEx replacement:\r\n\r\nTo achieve regular expression replacement you should specify the `flags` query param\r\n(as an empty string if you do not want any flags). In this case, `search` and `flags` are being\r\npassed to the [RegExp](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp) constructor.\r\n\r\nIn your `webpack.config.js`:\r\n\r\n```javascript\r\nmodule.exports = {\r\n  // ...\r\n  module: {\r\n    loaders: [\r\n      {\r\n        test: /fileInWhichJQueryIsUndefined\\.js$/,\r\n        loader: 'string-replace',\r\n        query: {\r\n          search: 'jquery',\r\n          replace: 'window.$',\r\n          flags: 'i'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n### Multiple replacement:\r\n\r\nAlso, you can pass an array of search-replace pairs this way:\r\n\r\nIn your `webpack.config.js`:\r\n\r\n```javascript\r\nmodule.exports = {\r\n  // ...\r\n  module: {\r\n    loaders: [\r\n      {\r\n        test: /\\.js$/,\r\n        loader: 'string-replace',\r\n        query: {\r\n          multiple: [\r\n             { search: 'jQuery', replace: 'window.$' },\r\n             { search: '_', replace: 'window.lodash' }\r\n          ]\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n## Contributing:\r\n\r\nFeel free to open issues to propose stuff and participate. Pull requests are also welcome.\r\n\r\n## Licence:\r\n\r\n[MIT](http://en.wikipedia.org/wiki/MIT_License)\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Va1/string-replace-loader.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "1.0.2"
}
